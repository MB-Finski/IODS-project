rmarkdown::render_site()
rmarkdown::render_site()
library(ggplot2)
library(plotly)
library(manipulateWidget)
createScatterPlot <- function(predictor){
scatterPlot <- ggplot(analysisDataset, aes(x = analysisDataset[[predictor]], y = points,col = gender))+geom_point()+geom_smooth(method="lm")+xlab(predictor)
ggplotly(scatterPlot, height=900, width=700, dynamicTicks = TRUE)  %>%  highlight("plotly_selected")
}
#selectInput("predictorVar","Choose wisely:",choices = sort(unique(names(analysisDataset[3:7]))),selected = "attitude")
#scatterPlot <- reactive({
#  ggplot(analysisDataset, aes(x = analysisDataset[[input$predictorVar]], y = points,col = gender))+geom_point()+geom_smooth(method="lm")+xlab(input$predictorVar)
#})
#renderPlotly({
#  ggplotly(scatterPlot(), height=900, width=700, dynamicTicks = TRUE)  %>%  highlight("plotly_selected")
#})
manipulateWidget(createScatterPlot(Predictor),Predictor = mwSelect(names(analysisDataset[3:7]), "attitude"),.height= 1024)
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender))+geom_point()+geom_smooth(method="lm")+xlab(name)+ylab("Exam points")
createScatterPlot(analysisDataset$attitude, "Attitude")
createScatterPlot(analysisDataset$attitude, name="Attitude")
library(ggplot2)
library(plotly)
createScatterPlot <- function(predictor,name){
predictor
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender))+geom_point()+geom_smooth(method="lm")+geom_smooth(aes(predictor,points),method = "lm")+xlab(name)+ylab("Exam points")
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
library(ggpubr)
createScatterPlot(analysisDataset$attitude, name="Attitude")
createScatterPlot(analysisDataset$attitude, name="Attitude")
library(ggplot2)
library(plotly)
library(ggpubr)
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE) + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
createScatterPlot(analysisDataset$attitude, name="Attitude")
library(ggplot2)
library(plotly)
library(ggpubr)
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE) + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot
#ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x=predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
scatterPlot <- scatterplot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x=predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
(analysisDataset$attitude, name="Attitude")
library(ggplot2)
library(plotly)
library(ggpubr)
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
correlationText
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
"OMG!!"
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
"OMG!!"
correlationText
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
createScatterPlot <- function(predictor,name){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
"OMG!!"
correlationText
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot(analysisDataset$attitude, name="Attitude")
predictor = analysisDataset$attitude
name="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point()
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "text",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
"OMG!!"
correlationText
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "tex",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
correlationText
library(ggstatsplot)
predictor = analysisDataset$attitude
name="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)
correlationText <- stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "tex",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
"OMG!!"
correlationText
scatterPlot <- scatterPlot + annotate("text", label=correlationText)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
predictor = analysisDataset$attitude
name="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,output.type = "tex",mapping = aes(x = predictor, y = points,col=gender, color=plotColors), data= analysisDataset)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggMarginal(scatterPlot, type = "boxplot")
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
predictor = analysisDataset$attitude
name="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
ggMarginal(scatterPlot, type = "boxplot")
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
predictor = analysisDataset$attitude
name="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
scatterPlot <- ggMarginal(scatterPlot, type = "boxplot")
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
library(ggExtra)
predictor = analysisDataset$attitude
name="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
scatterPlot <- ggMarginal(scatterPlot, type = "boxplot")
ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
predictor = analysisDataset$attitude
name="Attitude"
ggscatter(data= analysisDataset, x = predictor, y = points, facet.by = gender, title = paste(name, "versus exam points", sep = " "), xlab = name, ylab = "Exam points", add = "reg.line")
predictor = analysisDataset$attitude
name="Attitude"
ggscatter(data= analysisDataset, x = predictor, y = points, color = gender, title = paste(name, "versus exam points", sep = " "), xlab = name, ylab = "Exam points", add = "reg.line")
predictor = analysisDataset$attitude
name="Attitude"
ggscatter(data= analysisDataset, x = predictor, y = points, color = gender, title = paste(name, "versus exam points", sep = " "), xlab = name, ylab = "Exam points", add = "reg.line")
ggscatter(data= analysisDataset, x = predictor, y = points, color = "gender", title = paste(name, "versus exam points", sep = " "), xlab = name, ylab = "Exam points", add = "reg.line")
ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(name, "versus exam points", sep = " "), xlab = name, ylab = "Exam points", add = "reg.line")
ggscatter(data = analysisDataset, x = "attitude", y= "points")
ggscatter(data = analysisDataset, x = predictor, y= "points")
ggscatter(data = analysisDataset, x = toLower(name), y= points)
ggscatter(data = analysisDataset, x = attitude, y= points)
ggscatter(data = analysisDataset, x = names(attitude), y= "points")
ggscatter(data = analysisDataset, x = "attitude"", y= "points")
ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(name, "versus exam points", sep = " "), xlab = name, ylab = "Exam points", add = "reg.line")
#plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
#scatterPlot <- ggscatter(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
#scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
#scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
#scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
#scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
#scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
#scatterPlot <- ggMarginal(scatterPlot, type = "boxplot")
#ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
```
ggscatter(data = analysisDataset, x = "attitude", y= "points")
predictor ="attitude"
name="Attitude"
ggscatter(data= analysisDataset, x = name, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
predictor ="attitude"
displayName="Attitude"
ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
createScatterPlot <- function(predictor,displayName){
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
#plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
#scatterPlot <- ggscatter(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
#scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
#scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
#scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
#scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
#scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
#scatterPlot <- ggMarginal(scatterPlot, type = "boxplot")
#ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),label.y = 3)
scatterPlot
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),label.y = 3)
scatterPlot
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),label.y = 3)
scatterPlot
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),label.y = 3)
scatterPlot
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),label.y = 3)
scatterPlot
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),label.y = 14)
scatterPlot
predictor ="attitude"
displayName="Attitude"
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 33)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32.5)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 31)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32.2)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", palette = c("red","blue"), title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32.2)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", palette = c("red","blue"), title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32.2)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32.2)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = 32.2)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))+scale_color_manual(values =plotColors)
scatterPlot
predictor ="attitude"
displayName="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = "jitter")+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = "jitter")+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = "jitter")+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = "jitter")+scale_color_manual(values =plotColors)
scatterPlot
predictor ="attitude"
displayName="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = "dodge")+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_stack())+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_stack(vjust=0.1)+scale_color_manual(values =plotColors)
scatterPlot
#plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
#scatterPlot <- ggscatter(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
#scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
#scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
#scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
#scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
#scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
#scatterPlot <- ggMarginal(scatterPlot, type = "boxplot")
#ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
```
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_stack(vjust=0)+scale_color_manual(values =plotColors)
scatterPlot
predictor ="attitude"
displayName="Attitude"
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_stack(vjust=0))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_stack(vjust=0.1))+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,position = position_stack(vjust=1))+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_stack(vjust=1))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,position = position_fill(vjust=1))+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_fill(vjust=1))+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,position = position_fill(vjust=0.9))+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_fill(vjust=1))+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.1))+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.5))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.6))+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")+geom_jitter(width = 0.1,height = 0.1)
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.6))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")+geom_jitter(width = 0.1,height = 0.1,aes(col=gender))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.6))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.6))+scale_color_manual(values =plotColors)
scatterPlot
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line",position=position_jitter(width=0.1,height=0.1))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.6))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line",position=position_jitter(width=0.1,height=0.1), repel = TRUE)
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = -5)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.7))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line",position=position_jitter(width=0.1,height=0.1), shape = "gender", palette = "jco")
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = -5)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.7))#+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points",shape = "gender", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line",position=position_jitter(width=0.1,height=0.1))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = -5)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.7))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points",shape = "gender", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line",position=position_jitter(width=0.1,height=0.1))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = -5)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.7))+scale_color_manual(values =plotColors)
scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
scatterPlot
createScatterPlot <- function(predictor,displayName){
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
#scatterPlot <- ggscatter(data= analysisDataset, x = predictor, y = "points",shape = "gender", color = "gender", title = paste(displayName, "versus exam points", sep = " "), xlab = displayName, ylab = "Exam points", add = "reg.line",position=position_jitter(width=0.1,height=0.1))
#scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE, mapping = aes(color = "Combined"))
#scatterPlot <- scatterPlot + stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01, label.y = -5)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01,mapping = aes(col=gender),position = position_nudge(y=-0.7))+scale_color_manual(values =plotColors)
#scatterPlot
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot <- scatterPlot + geom_smooth(mapping=aes(predictor,points,color = "Combined"),method = "lm", se=FALSE, data = analysisDataset,inherit.aes =FALSE)
scatterPlot <- scatterPlot + labs(x = name,y = "Exam points",color = "Gender")+scale_color_manual(values =plotColors)
scatterPlot <- scatterPlot + ggtitle(paste(name, "versus exam points", sep = " "))
scatterPlot
#scatterPlot <- ggMarginal(scatterPlot, type = "boxplot")
#ggplotly(scatterPlot, height=900, dynamicTicks = TRUE,tooltip=c("points","gender"))  %>%  highlight("plotly_selected")
}
createScatterPlot("attitude", displayName="Attitude")
library(ggpubr)
plotColors <- c("F" = "red", "M" = "blue", "Combined" = "black")
scatterPlot <- ggplot(analysisDataset, aes(x = predictor, y = points,col = gender,color=plotColors))
scatterPlot <- scatterPlot + geom_point(position = position_jitter(width = 0.5, height = 0.5))
scatterPlot <- scatterPlot + geom_smooth(method="lm", se=FALSE)+stat_cor(method = "pearson", p.accuracy = 0.001, r.accuracy = 0.01)
scatterPlot
